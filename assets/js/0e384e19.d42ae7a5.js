"use strict";(self.webpackChunkgolioth_thread_demo=self.webpackChunkgolioth_thread_demo||[]).push([[671],{3905:function(e,t,o){o.d(t,{Zo:function(){return d},kt:function(){return p}});var r=o(7294);function a(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function i(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,r)}return o}function n(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?i(Object(o),!0).forEach((function(t){a(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):i(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function l(e,t){if(null==e)return{};var o,r,a=function(e,t){if(null==e)return{};var o,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)o=i[r],t.indexOf(o)>=0||(a[o]=e[o]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)o=i[r],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(a[o]=e[o])}return a}var s=r.createContext({}),h=function(e){var t=r.useContext(s),o=t;return e&&(o="function"==typeof e?e(t):n(n({},t),e)),o},d=function(e){var t=h(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var o=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),c=h(o),p=a,m=c["".concat(s,".").concat(p)]||c[p]||u[p]||i;return o?r.createElement(m,n(n({ref:t},d),{},{components:o})):r.createElement(m,n({ref:t},d))}));function p(e,t){var o=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=o.length,n=new Array(i);n[0]=c;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,n[1]=l;for(var h=2;h<i;h++)n[h]=o[h];return r.createElement.apply(null,n)}return r.createElement.apply(null,o)}c.displayName="MDXCreateElement"},9881:function(e,t,o){o.r(t),o.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return h},assets:function(){return d},toc:function(){return u},default:function(){return p}});var r=o(7462),a=o(3366),i=(o(7294),o(3905)),n=["components"],l={sidebar_position:1},s="Golioth Thread Demo Overview",h={unversionedId:"intro",id:"intro",title:"Golioth Thread Demo Overview",description:"What is this Demo all about?",source:"@site/docs/intro.md",sourceDirName:".",slug:"/intro",permalink:"/golioth-openthread-demo-docs/docs/intro",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",next:{title:"What is Golioth?",permalink:"/golioth-openthread-demo-docs/docs/golioth-intro/"}},d={},u=[{value:"What is this Demo all about?",id:"what-is-this-demo-all-about",level:2},{value:"Additional Resources",id:"additional-resources",level:2},{value:"System diagram",id:"system-diagram",level:3},{value:"What is Thread?",id:"what-is-thread",level:2},{value:"High Level Video overview",id:"high-level-video-overview",level:3},{value:"Why Golioth is a great fit for Thread applications",id:"why-golioth-is-a-great-fit-for-thread-applications",level:2},{value:"How can you use this material after training is over?",id:"how-can-you-use-this-material-after-training-is-over",level:2}],c={toc:u};function p(e){var t=e.components,l=(0,a.Z)(e,n);return(0,i.kt)("wrapper",(0,r.Z)({},c,l,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"golioth-thread-demo-overview"},"Golioth Thread Demo Overview"),(0,i.kt)("h2",{id:"what-is-this-demo-all-about"},"What is this Demo all about?"),(0,i.kt)("p",null,"This is a place where you're going to learn abouthow to create a network of Thread devices by playing with hardware. First we'll set up the pieces required to connect your Thread network to the internet. After that, we'll compile custom code to allow a small, low-power device to send custom data packets to the internet through the Golioth Device Management Layer."),(0,i.kt)("h2",{id:"additional-resources"},"Additional Resources"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://blog.golioth.io/build-a-customized-thread-network-using-off-the-shelf-components"},'Blog post: "Build a customized Thread network using off-the-shelf components"')),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://youtu.be/G5l0G-b9hU4"},"YouTube video showing building and troubleshooting a Thread network")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/golioth/golioth-openthread-demo"},"Code repo on GitHub for Thread nodes"))),(0,i.kt)("h3",{id:"system-diagram"},"System diagram"),(0,i.kt)("p",null,(0,i.kt)("img",{loading:"lazy",alt:"Thread_System_Diagram",src:o(5895).Z,width:"1920",height:"1080"})),(0,i.kt)("h2",{id:"what-is-thread"},"What is Thread?"),(0,i.kt)("p",null,"Thread (and the OpenThread implementation we are using here) is a networking protocol built on top of 802.15.4. It handles the network setup and meshing of small devices using 2.4 GHz radios. Once the network is set up, each device on the mesh network will have it's own IPv6 address and be speaking using CoAP (a transport layer) over UDP. "),(0,i.kt)("h3",{id:"high-level-video-overview"},"High Level Video overview"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://www.youtube.com/channel/UCrVLgIniVg6jW38uVqDRIiQ"},"Smart Home Protocols")," made this video showcasing how Thread works, especially in a consumer setting"),(0,i.kt)("p",{align:"center"},(0,i.kt)("iframe",{width:"640",height:"480",src:"https://www.youtube.com/embed/0JC4tNe0OS4",title:"YouTube video player",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:!0})),(0,i.kt)("h2",{id:"why-golioth-is-a-great-fit-for-thread-applications"},"Why Golioth is a great fit for Thread applications"),(0,i.kt)("p",null,"Golioth develops and hosts CoAP-based API endpoints on the web, which are built to receive UDP packets. As such, we can talk directly to the IPv6 addressed devices, and use the Golioth console as a management platform for Thread based devices! Any of the services that Golioth users know and love can be implemented on Thread based devices:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Logging"),(0,i.kt)("li",{parentName:"ul"},"LightDB State"),(0,i.kt)("li",{parentName:"ul"},"LightDB Stream"),(0,i.kt)("li",{parentName:"ul"},"DFU")),(0,i.kt)("p",null,"We will showcase many of these functions in the ",(0,i.kt)("a",{parentName:"p",href:"create-thread-node"},"Thread Node section")," of these docs."),(0,i.kt)("h2",{id:"how-can-you-use-this-material-after-training-is-over"},"How can you use this material after training is over?"),(0,i.kt)("p",null,"Developers who successfully complete this training should feel confident that they will be able to program and deploy a simple Thread based IoT system to the field in their application. They will be able to program a custom end node to talk back over a Thread network to the Golioth management layer."))}p.isMDXComponent=!0},5895:function(e,t,o){t.Z=o.p+"assets/images/OpenThread_Golioth_Diagram-eb19aa574a3b202b666e73ed6e715332.png"}}]);